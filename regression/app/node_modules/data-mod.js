var mysql = require('mysql');
var querystring = require('querystring');
var http = require('http');

var client = null;

/*
 * 初始化数据库链接
 *@param hostname 数据库ip
 *@param username 数据库用户名
 *@param password 数据库密码
 * */ 
function init(hostname,username,password){
	client = mysql.createConnection({
		host:hostname,
	  user:username,
	  password: password,
		insecureAuth: true
	});

	client.connect(function(err){
		//if(err) throw err;
//		console.log('connect server success!'+err)
	});
	client.query('USE uitest');
    client.query('SET NAMES "latin1"');
	createTable();
}

// 关闭数据库链接
function closeCon(){
	client.end();
}
// 添加一条记录
function addOne(){
	client.query(_addOneNote('list','test task','http://item.taobao.com/item.htm?id=10361183984','http://uitest.taobao.net/case/42.js','qiyou','123456','this is a test',0,10,'2012-12-06 20:00:00'),function(err){
		if (err && err.number != mysql.ERROR_DB_CREATE_EXISTS) {
		//	throw err;
		}
	});
}

// 创建一个数据库
// @param database 数据库名
function createDatabase(database){
	client.query('CREATE DATABASE '+database, function(err) {
			if (err && err.number != mysql.ERROR_DB_CREATE_EXISTS) {
			//	 throw err;
			}
	});
}

// 创建一个表
function createTable(){
	client.query('CREATE TABLE list (id int(6) not null primary key auto_increment,task_name char(40) not null,task_target_uri char(100) not null,task_inject_uri char(100) not null,username char(20) not null,password char(20),task_result text(400),failed_specs int(4) default "0",total_specs int(4) default "0",last_time DATETIME not null,next_time DATETIME not null,start_time DATETIME,duration int(4) not null,week varchar(20))',function(err){
		if (err && err.number != mysql.ERROR_DB_CREATE_EXISTS) {
			//throw err;
		}
	});
}

// 查找一条数据a
// @param table 表名
// @param id 字段id
function findOne(id,callback){
	client.query(_findOneNote(id),function(err,results){
		if (err && err.number != mysql.ERROR_DB_CREATE_EXISTS) {
			//throw err;
		}

		//应该只有一条
        if(results){
            results.forEach(function(result) {
                callback(result);
            });
        }

	});
}

// 查询表中所有数据
// @param table 表名
function findAll(callback){
	client.query(_findAllNote(),function(err,result){
		if (err && err.number != mysql.ERROR_DB_CREATE_EXISTS) {
			//throw err;
		}


		callback(result);
	});
}

// 得到当前需要执行的用例数据
function findLatestSpecs(callback){
	client.query(_findByTime(),function(err,result){
		if (err && err.number != mysql.ERROR_DB_CREATE_EXISTS) {
		//	throw err;
		}

		callback(result);
	});
}

// 更新一条数据
// @param table 表名
// @param result 测试结果
// @param failed_specs 失败用例数目
// @param total_specs 所有的用例数目
// @param id 对应数据项id
function updateOne(item, callback){
	var id = item.id;
	var nextTime = _getNewNextTime(item.duration);
	var result = item.task_result;

   if(!result)return;

	var browser_result = {};

	var all_result = true;
	for(var  p in result){
        if(!result[p].reports)continue

		if(result[p].reports.failedSpecs !== 0|| result[p].reports.errors.length !== 0){
			browser_result[p]=false;
			all_result = false;
		} else {
			browser_result[p]=true;
		}
	}
	browser_result = client.escape(JSON.stringify(browser_result));

    console.log("report", result);

	client.query(_updateOneNote(id,result,browser_result,nextTime),function(err){
        callback&&callback();
        if (err && err.number != mysql.ERROR_DB_CREATE_EXISTS) {
			//throw err;

		}

	});

	if(!all_result) {
		findOne(item.id, function(result) {

			//发送旺旺消息
			var nick = result.wangwang || result.creator;
			var context = '你的测试用例 <b>' + result.task_name + ' </b> 回归失败, 请查看 <a href="http://uitest.taobao.net/tool/result.php?me&task_id=' + item.id + '">这里</a>';

			var qstr = querystring.stringify({
				auth: '5f14d86fc3a1bde15944bab0c88c8ec2',
				nick: nick,
				subject: 'uitest',
				context: context
			});

			http.get({
				host: 'kelude.taobao.net',
				path: '/api/admin/notice/wangwang' + '?' + qstr
			});


		});
	}

}

function updateSome(dataArr,callback){

    var count = dataArr.length;
	var nextTime = null;
	for(var i =0;i<dataArr.length;i++){
        var item = dataArr[i];
		nextTime = _getNewNextTime(item.duration);
        if(item.task_result){
            updateOne('list',item.task_result,nextTime,item.id, function(){
                --count == 0 && callback();
            });
        }
        else{
            console.log(item.id,"结果不存在")
        }


	}
}

// 根据时间返回查询数据
function _findByTime(){
	var d = new Date();
	var day = d.getDay();
	return "select `id`,`task_result`,`creator`, `task_inject_uri`, `duration`  from list where locate('"+day+"',week) > 0 and next_time < now() order by prev_time";
}

function _addOneNote(table,task_name, task_target_uri, task_inject_uri, username, password,task_result , failed_specs, total_specs, next_time, week, duoration, start_time){
	return 'insert into '+ table +' (task_name, task_target_uri, task_inject_uri, username, password,task_result , failed_specs, total_specs, next_time, week, duoration, start_time) values ("' + task_name + '", "' + task_target_uri + '", "' + task_inject_uri + '", "' + username + '", "' + password + '", "' + task_result + '", ' + failed_specs + ', '+ total_specs + ', "' + last_time + ', ' + week + ', ' + duoration +'")';
}

function _findOneNote(id){
	return 'select * from list where id = '+id;
}

function _findAllNote(table){
	return 'select * from list';
}

function _updateOneNote(id,result,browser_result,next_time){

    result = client.escape(JSON.stringify(result))

    var sql =  'update list set task_result = '+result+',browser_result = '+browser_result+', next_time = ' + next_time + ', prev_time =now() where id = '+id;


	return sql;
}

function _getDate(){
	var d = new Date();
	return "'" + d.getFullYear() + "-" + (d.getMonth()+1) + "-" + d.getDate() + " " + d.getHours() + ":" + d.getMinutes() + ":" + d.getSeconds() + "'"; 
}

function _getDeadline(){
	var d = new Date();
	var last = d.valueOf() + 1800000;
	var b = new Date(last);
	return "'" + b.getFullYear() + "-" + (b.getMonth()+1) + "-" + b.getDate() + " " + b.getHours() + ":" + b.getMinutes() + ":" + b.getSeconds() + "'"; 
}
function _getNewNextTime(duration){

	var cur = new Date();
	var next = cur.valueOf() + duration*60000;
	var nextTime = new Date(next);

	return "'" + nextTime.getFullYear() + "-" + (nextTime.getMonth()+1) + "-" + nextTime.getDate() + " " + nextTime.getHours() + ":" + nextTime.getMinutes() + ":" + nextTime.getSeconds() + "'"; 

}

exports.init = init;
exports.closeCon = closeCon;
exports.findAll = findAll;
exports.addOne = addOne;
exports.findLatestSpecs = findLatestSpecs;
exports.updateOne = updateOne;
exports.updateSome = updateSome;
